import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { BlogInterface, ProductInterface } from "../interface/Interface";

interface Props {
  products: ProductInterface[] | null;
  blogs: BlogInterface[] | null;
}

const Search: NextPage<Props> = ({ products, blogs }) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="search" />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          <>
            <h2 className="mb-5">
              {blogs?.length === 0
                ? " There are no results of BLOGS with your search."
                : "Blogs"}
            </h2>
            <div className="row isotope-grid">
              <div className="col-4">
                {blogs &&
                  blogs.map((blog) => <BlogItem key={blog.id} blog={blog} />)}
              </div>
            </div>
          </>

          <>
            <h2 className="mb-5">
              {products?.length === 0
                ? " There are no results of PRODUCTS with your search."
                : "Products"}
            </h2>
            <div className="row isotope-grid">
              {products &&
                products.map((product) => (
                  <ProductItem key={product.id} product={product} />
                ))}
            </div>
          </>
        </div>
      </div>
    </>
  );
};
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let resProduct,
    products: ProductInterface[] | null = null;
  let resBlogs,
    blogs: BlogInterface[] | null = null;
  const searchQuery = query?.q;

  if (searchQuery) {
    resProduct = await fetch(
      `http://localhost:5001/products?&q=${searchQuery}`
    );
    products = await resProduct.json();

    resBlogs = await fetch(`http://localhost:5001/blogs?&q=${searchQuery}`);
    blogs = await resBlogs.json();
  }

  return {
    props: {
      products,
      blogs,
    },
  };
};

export default Search;
